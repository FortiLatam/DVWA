pipeline {
    agent any
    environment {
        IMAGE_REPO_NAME="dvwapub"
        LW_API_KEY = credentials('LW_API_KEY')
        LW_API_SECRET = credentials('LW_API_SECRET')
        REPOSITORY_URI = "public.ecr.aws/f9n2h3p5/dvwapub"
        AWS_DEFAULT_REGION = "us-east-1"
    }
   
    stages {
    
    /*stage('Logging into AWS ECR') {
            steps {
                script {
                sh """aws ecr-public get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${REPOSITORY_URI} """
                }
                 
            }
        } */
    
    stage('Clone repository') { 
            steps { 
                script{
                checkout scm
                }
            }
        }  
  
    // Building Docker images
    /*stage('Building image') {
      steps{
        script {
          dockerImage = docker.build "${IMAGE_REPO_NAME}:${IMAGE_TAG}-${env.BUILD_NUMBER}"
        }
      }
    }*/
   
    // Uploading Docker images into AWS ECR
    /*stage('Pushing to ECR') {
     steps{  
         script {
                sh """docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG}-${env.BUILD_NUMBER} ${REPOSITORY_URI}:$IMAGE_TAG-${env.BUILD_NUMBER}"""
                sh """docker push ${REPOSITORY_URI}:${IMAGE_TAG}-${env.BUILD_NUMBER}"""
         }
        }
      }*/
      /*stage('CNP Scan'){
            steps {
                 fortiCWPScanner imageName: "${IMAGE_REPO_NAME}:${IMAGE_TAG}-${env.BUILD_NUMBER}", block: true
            }
        }
      */
      stage('IAC scan'){
            steps {
                 
                 // Provide Lacework credentials
                 sh 'echo "LW_ACCOUNT=1294487" > env.list' 
                 sh 'echo "LW_API_KEY=${LW_API_KEY}" >> env.list'
                 sh 'echo "LW_API_SECRET=${LW_API_SECRET}" >> env.list echo "WORKSPACE=src" >> env.list'
                 // Provide Jenkins build details
                 sh 'env | grep "^BRANCH_\\|^CHANGE_\\|^TAG_\\|^BUILD_\\|^JOB_\\|^JENKINS_\\|^GIT_" >> env.list'
                 // Provide custom exit
                 // sh 'echo "EXIT_FLAG=High=2" >> env.list'
                 // Run IAC Scan
                 sh 'docker run --env-file env.list -v "$(pwd):/app/src" lacework/codesec:stable lacework iac scan --directory=.'
            }
        }
      /*stage('Deploy'){
            steps {
                 sh 'sed -i "s/<TAG>/${IMAGE_TAG}-${BUILD_NUMBER}/" deployment.yml'
                 sh 'kubectl apply -f deployment.yml'
                 
                 //If you are sure this deployment is already running and want to change the container image version, then you can use:
                 //sh 'kubectl set image deployments/dvwa 371571523880.dkr.ecr.us-east-2.amazonaws.com/dvwaxperts:${BUILD_NUMBER}'
            }
        } */
       /*stage('DAST'){
            steps {
                 sh 'env | grep -E "JENKINS_HOME|BUILD_ID|GIT_BRANCH|GIT_COMMIT" > /tmp/env'
                 sh 'docker pull registry.fortidevsec.forticloud.com/fdevsec_dast:latest'
                 sh 'docker run --rm --env-file /tmp/env --mount type=bind,source=$PWD,target=/scan registry.fortidevsec.forticloud.com/fdevsec_dast:latest'
            }
        }*/
    }
}
